# work
  Nさんならどうやるか？
  Tさんならどうやるか？
  Kさんならどうやるか？
  Tさんならどうやるか？

  仕事には鮮度がある
    「今やらなくてもいい仕事」を額面通り後回しにしない
    「仕事」と「作業」をうまく分ける
    「とりあえず」やってみる
    デスクを綺麗に
    ミスを話す

  プログラムを書くとき
  　怠惰でいる
  　感覚的に考える
  　感じる

  ソフトウェア構想時
  　感覚的な思考で思い浮かべる

  ソフトウェアの設計図やデータ構造
  　感覚的な思考で設計

  防御的な仕事に1/3かけない
  　8～10 防御
  　10~11 打ち合わせ
  　11~18 攻撃

# coding
  小さくする
  　クラス　50行以内
  　メソッド　3行以内
  　パッケージ 10ファイル以内

  １．ひとつのメソッドのインデントは1段階まで
  ２．else 句 を使わない
  ３．すべてのプリミティブ、文字型をラッピング
  ４．ファーストクラスコレクションを使う
  ５．1行につき、ドットはひとつ
  ６．名前は省略しない
  ７．クラス50行、パッケージ10ファイルまで
  ８．インスタンス変数は２つまで
  ９．getter/setter を使わない

  Tell, Don't Ask

# tmux
  c 新しいウィンドウを作成
  d カレントクライアントをデタッチ
  l 直前に選択されていたウィンドウを移動
  n 次のウィンドウに切り替え
  p 前のウィンドウに切り替え
  & カレントウィンドウをkill
  , カレントウィンドウをリネーム
  ? 全キーバインドを列挙

# vim
  C_[ esc
  C_f 画面分下に進む
  C_b 画面分上に戻る
  C_u 画面半分上に進む
  C_d 画面半分下に進む
  :行番号 指定した番号に進む
  / 単語検索
  n 次の検索
  S_n 前の検索
  f_word 行内検索
  S_f_word 後ろ検索
  e 単語末尾に移動
  C_w s 画面横分割
  C_w v 画面縦分割
  C_w c 現在の画面閉じる

# terminal
  C_a カーソル文頭移動
  C_e カーソル文末移動
  C_k カーソル位置以降文字削除
  C_u カーソル一行削除
  C_b 単語単位バック移動
  C_f 単語単位フォワード移動
  C_l カーソル行をウィンドウ最上部に移動
  C_p コマンド履歴Previous表示
  C_n コマンド履歴Next表示
  C_r コマンド履歴検索

# tips
  # 並列階層に複数ディレクトリの作成
    mkdir {dir1,dir2,dir3}
    touch {dir1,dir2}/{file1,file2}
    touch foo{1,2,3}bar
    cp foobar{,.bak}
  # ディレクトリを作って移動
    mkdir /the/directory/path; cd $_
  # 一つ前のディレクトリに戻る
    cd -
  # コマンドを複数プロセスで並列実行
    cat url.list | xargs -L1 -P5 curl
  # フォルダ階層構造作成
    mkdir -p /var/tmp/hoge



